---
title: "INTRODCTION TO R LANGUAGE TP04"
author: "Presented by Djamal Toe"
institute: "National School for Statistic and Data Analysis"
format:
  revealjs:
    transition: slide
    transition-speed: fast
    incremental: true
    logo: "LLOGO.png"
    slide-number: True
    aspect_ratio: "16:9"
    margin: 0.05
    center: true
    footer: "Statistiques descriptives avec R"
    css: style.css
fig_caption: yes
toc: false
toc-expand: false
toc-depth: 1
fig-cap-location: top
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, warning = F, message = F)
```

```{r}
capTabNo = 1; capFigNo = 1;
capTab = function(x){
 
    x = paste0("Table ",capTabNo," : ",x)
    capTabNo <<- capTabNo + 1
 x
}

capFig = function(x){
 
    x = paste0("","","",x)
    capFigNo <<- capFigNo + 1
    x
}

repeated_capFig = function(x){
  x = paste0(paste0(paste0("Figure ", capFigNo), ""), x)
  x
}
```

```{r}
packages_ <- c("ggplot2", "dplyr","readxl","cowplot", "survey","gtsummary")

for (pkg in packages_) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    install.packages(pkg, dependencies = T)
  }
  library(pkg, character.only = TRUE)
}
```

# Exercice 1

## Chargement des données


```{r}
path  <- getwd()
fqp <- readRDS(paste0(path,"/fqp.rds"))
pop_equip <- readRDS(paste0(path,"/pop_equip_com.rds"))
titanic_app <- readRDS(paste0(path,"/titanic_appur.rds"))
```


## Question 1 : Combien d’individus ont survécu ? 

```{r}
indiv.vivant <- titanic_app %>% 
  filter(Survie==1) %>% 
  summarise(`Nombre de survivants` = n())

indiv.vivant
```
Il y a **427** survivants

- ***La moyenne arithmétique*** de la variable **Survie (indicatrice)** correspond à la probabilité d'être en vie

## Question 1 : Combien d’individus ont survécu ? 

### Tableau de contingence Survie/Classe

```{r}
tab.contingence <- table(titanic_app$Classe, titanic_app$Survie)
tab.contingence
```

Non


## Question 1 : Combien d’individus ont survécu ? 

### Statistique de Khi-2

```{r}
khi2 <- chisq.test(tab.contingence)
khi2.stat <- khi2$statistic
khi2.stat
```
Elle vaut ***107.06***

### V de Cramer

```{r}
V.cramer <- function(tab.conting, khi2.stat, n){
  stat <- sqrt(khi2.stat/(n*(min(
  nrow(tab.conting)-1,ncol(tab.conting)-1)))
  )
  names(stat) <- "V de Cramer"
  return(stat)
}

V.cramer_ <- V.cramer(tab.contingence,khi2.stat,nrow(titanic_app))

V.cramer_
```

## Question 2 :

```{r, out.height="80%", out.width="90%"}
titanic_app$Sexe2 <- ifelse(
  titanic_app$Age <= 10,
  "Enfant",
  titanic_app$sexe
    
)

tbl <- gtsummary::tbl_cross(
  titanic_app,
  Sexe2,
  Survie,
  digits = 2,
  percent = "row") %>% 
  add_p() %>% bold_p() %>% bold_labels() %>% bold_levels()

tbl
```


## Question 3 : Analysez le lien entre la survie et le prix du ticket. 


```{r}
mod <- aov(Prix ~ Survie , data = titanic_app)
results <- summary(mod)
results
```
Il y a un lien car le test d'anova est significatif à 5%.

```{r}
var.inter <- sum(results[[1]]$`Sum Sq`[-length(results[[1]]$`Sum Sq`)])
var.totale <- var.inter + results[[1]]$`Sum Sq`[length(results[[1]]$`Sum Sq`)]
rap.cor <- var.inter/var.totale
rap.cor
```

Mais le rapport de correlation stipule que le lien n'est pas puissant.

## Question 

```{r, fig.align='center', out.width="90%", out.height="85%"}
titanic_app$Survie <- as.character(titanic_app$Survie)
graph <- ggplot(titanic_app) +
  geom_boxplot(aes(x = Survie, y = Prix, color = Survie)) + 
  xlab("Survie")+
  ylab("Prix du billet")+
  theme_light()

graph
```

# EXERCICE 2 : Etude de la mobilité sociale intergénérationnelle

## Question 1

```{r}
nrow(fqp)
length(is.numeric(fqp[,colnames(fqp)]))
```

- Il y a ***6947*** observations

- Il n'y a qu'une seule variable numérique

## Question 2 : Affichez le nombre de modalités des variables CSFils et CSPere

```{r}
length(unique(fqp$CSFils))
length(unique(fqp$CSPere))
```
Il y en a 6 par variable

## Question 3 : Créez les variables libCSFils et libCSPere

```{r}

unique.mod <- unique(fqp$CSFils)
unique.val <- c("Agriculture","Artisan","Cadre et PIS",
                "Professions intermédiaires",
                " Employé", "Ouvrier")

fqp$libCSFils <- unique.val[match(fqp$CSFils,unique.mod)]
fqp <- fqp %>% 
  mutate(
    libCSFils  = factor(
      case_when(
        CSFils == "CS1" ~ "Agriculture",
        CSFils == "CS2" ~ "Artisan",
        CSFils == "CS3" ~ "Cadre et PIS",
        CSFils == "CS4" ~ "Professions intermédiaires",
        CSFils == "CS5" ~" Employé", 
        T ~ "Ouvrier"
      ),
      ordered = T,
      levels <- unique.val
    ),
    libCSPere  = factor(
      case_when(
        CSPere == "CS1" ~ "Agriculture",
        CSPere == "CS2" ~ "Artisan",
        CSPere == "CS3" ~ "Cadre et PIS",
        CSPere == "CS4" ~ "Professions intermédiaires",
        CSPere == "CS5" ~" Employé", 
        T ~ "Ouvrier"
      ),
      ordered = T,
      levels <- unique.val
    )
  )

fqp <- fqp[,c(3,1,5,2,6,4)]
```


## Question 4 : Affichez le tableau de contingence des variables libCSFils (en ligne) et libCSPere (en colonne)

```{r}
tab <- table(fqp$libCSFils, fqp$libCSPere)
tab
```

## Question 5 : En tenant compte de la pondération :

- **Calculez la statistique du Khi-Deux des variables libCSFils et libCSPere** 

|       Quand il y a les poids on fait la somme des poids plutot que de compter les effectifs

```{r}
tab.poids <- tapply(fqp$poids,list(fqp$libCSFils, fqp$libCSPere), FUN = sum)
khi.stat <- chisq.test(tab.poids)
khi.stat$statistic
```

## Question 5 : En tenant compte de la pondération :

- **Calculez le V de cramer**

```{r}
V.cramer_ <- V.cramer(tab.poids, khi.stat$statistic, sum(fqp$poids))
V.cramer_
```

## Question 6 : 

La pondération étant uniforme (même poids pour chaque individu), est-ce que les distributions (au sens des fréquences) de chacune des variables changent ?

```{r}
table(fqp$libCSFils,fqp$libCSPere)
```
## Question 6 : 

Calculez la statistique du Khi-Deux des variables libCSFils et libCSPere sur les 6 947 individus interrogés.

```{r}
chisq.test(tab)
```

## Question 6 : 


Que remarquez-vous ? Quelle différence observez-vous avec la question précédente ?

La stat est multipliée par **le poids**

## Question 7 : a)

```{r, out.width="90%", out.height="80%"}
tbl <- gtsummary::tbl_cross(
  fqp,
  libCSFils,
  libCSPere,
  digits = 2,
  percent = "row") %>% 
  add_p() %>% bold_p() %>% bold_labels() %>% bold_levels()

tbl
```

## Question 7 :

- Comment interpréter le 88.42% à l’intersection des modalités Agriculture des deux variables ?

- Dans une situation de fluidité sociale, comment serait la table des recrutements ?

- Quid dans le cas d’une absence totale de mobilité sociale ?

# Exercice 3 : Retour sur l’exo 1 du TP3

## Question 1 : Quel indicateur permet de mesurer le lien linéaire entre deux variables quantitatives ?

Il s'agit du coefficient de corrélqtion de **Pearson** de formule :

$$
\begin{equation} 
    \begin{split} 
        \rho_{XY} &= \frac{Cov(X,Y)}{Var(X)\cdot Var(Y)},
    \end{split} 
\end{equation}
$$


## Question 1 : Calculer cette statistique entre la variable pop_tot et nb_equip_tot.

```{r}
rho <- cor.test(pop_equip$pop_tot, pop_equip$nb_equip_tot)
rho$estimate
```

## Question 2 : Modèle de régression linéaire

- **Construire le modèle**

```{r, echo=TRUE}
model <- lm(nb_equip_tot~pop_tot, data = pop_equip)
```

- **Donnez les différents coefficients**

```{r}
coefficients_ <- model$coefficients
coefficients_
```
## Question 2 : Modèle de régression linéaire

```{r, fig.align='center', out.width="90%", out.height="85%"}
graph <- ggplot() +
          geom_point(data = pop_equip, aes(x = pop_tot , y =nb_equip_tot )) + 
          geom_abline(slope = coefficients_[2], 
                      intercept = coefficients_[1], colour = "red") +
  xlab("Popultion totale")+ 
  ylab("Nombre total d'équipes") +
            theme_light()
graph
```

## Question 2 : Modèle de régression linéaire

```{r}
cr <- function(x){
  return(x*x)
}

df_<- data.frame(
  X = c(2, 5, 6, 10 , 12),
  Y = c(83, 70, 70, 54, 49)
)

mod <- lm(Y~X , data = df_)
summary(mod)
```

