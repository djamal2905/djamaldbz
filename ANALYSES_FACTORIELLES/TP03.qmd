---
title: "Djamaldbz - Méthodes d'Analyse factorielle TP02"
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, message = FALSE, warning = FALSE)
```

```{r, echo = FALSE}
capTabNo = 1; capFigNo = 1;
capTab = function(x){
 
    x = paste0("Tableau",capTabNo," : ",x)
    capTabNo <<- capTabNo + 1
 x
}

capFig = function(x){
 
    x = paste0("","","",x)
    capFigNo <<- capFigNo + 1
    x
}

repeated_capFig = function(x){
  x = paste0(paste0(paste0("Figure ", capFigNo), ""), x)
  x
}
options(OutDec= ",")
```

```{r}
packages_ <- c("ggplot2", "dplyr","readxl","cowplot")

for (pkg in packages_) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    install.packages(pkg, dependencies = T)
  }
  library(pkg, character.only = TRUE)
}
```

# Description des données

|       Le jeu de données utilisé dans ce premier cas pratique provient du site web de ***Global Footprint Network***. Il contient les résultats d’empreinte écologique et de biocapacité pour 184 pays.

Les données sont disponibles sur <<https://marieetienne.github.io/datasets/overshootday_overview.csv>>.

## Quelques définitions

|       Le calcul de l’empreinte écologique et de la biocapacité nous aide à répondre à la question de recherche fondamentale : Quelle est la demande des êtres humains envers les surfaces biologiquement productives (empreinte écologique) par rapport à la quantité que la planète (ou la surface productive d’une région) peut régénérer sur ces surfaces (biocapacité) ?

* **Hectare global (gha)** : C’est l’unité choisie pour exprimer toutes les quantités d’intérêt concernant la consommation/émission de carbone. Une unité de surface correspondant à la productivité moyenne d’un hectare de terres mondiales. Un hectare de terres agricoles vaudra plus d’hectares globaux qu’un hectare de désert.

* **Empreinte écologique (en gha par personne)** : Le nombre de gha requis pour produire les besoins et absorber les déchets d’un pays.

* **Biocapacité (en gha)** : La capacité d’un pays à produire ce dont il a besoin et à absorber ses déchets (réserve écologique).

* **Jour de dépassement** : Jour de l’année où la demande d’un pays dépasse sa biocapacité annuelle.

# Analyse des données

## Chargement des données

```{r}
##-- Installer et Charger les packages requis
###--- vecteurs des packages
packages <- c("factoextra", "corrr", "FactoMineR", "dplyr","kableExtra","corrplot",
              "explor")

###--- Boucle pour installer et charger les packages
for (pkg in packages) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    install.packages(pkg, dependencies = T)
  }
  library(pkg, character.only = TRUE)
}

##-- charger la base de données via le lien web
link.to.data <- "https://marieetienne.github.io/datasets/overshootday_overview.csv"
df <- read.csv(link.to.data)
```

## Analyse exploratoire des données

```{r}
nrow(df); ncol(df) ;dim(df)
```
Les données sont composées de **182** lignes et de ***13*** colonnes.

## Résumé statitique des variables

On utilise la commande ***summary(df)*** tout simplement, mais pour une question d'exthétique on utilise ce code.

```{r}
##-- summary pour les variable numériques
summary.df.num <- sapply(df[sapply(df, is.numeric)], function(x) {
  c(
    min = min(x, na.rm = TRUE),
    Q1 = quantile(x, 0.25, na.rm = TRUE),
    Q3 = quantile(x, 0.75, na.rm = TRUE),
    med = quantile(x, 0.5, na.rm = TRUE),
    mean = mean(x, na.rm = TRUE),
    max = max(x, na.rm = TRUE),
    count = sum(!is.na(x)),
    sd = sd(x, na.rm = TRUE),
    `NA's` = round(sum(is.na(x)),0)
  )
})
summary.df.num <- as.data.frame(summary.df.num)
```

Ensuite nous affichons ce resumé dans un tableau : 

```{r, echo=FALSE}
kable(summary.df.num, caption = capTab("Résumé statistique des variables")) %>% add_footnote(label = "by Djamal Y. TOE") 
```

|   Nous constatons que ceraines variables ont des données manquantes, nous pouvons décider de soit les supprimer, soit les prédire avec des méthodes d'imputation en fonction de leurs importances. Mais pour le moment nous allons juste les supprimer.

```{r}
df <- na.omit(df)
nrow(df)
```

Ainsi nous passons de 182 à 162 lignes.

## Contruction de l'Analyse en composante principale

* **Le poids pour les pays** : Les tailles respectives des populations de chaques pays car cela garantit que l'analyse est représentative des différences globales, en tenant compte de l'impact démographique des pays.

* **Métrique** : Normalisation des données car les variables ne sont pas toutes sur la même échelle. Cela permet d'éviter que les variables avec de grosses valeurs (grandes échelles) dominent l'analyse.

* **variables sup** :
  - ***Quali sup*** : region, income_group
  - ***Quanti sup*** : pop
  
### Réalisation de l'ACP

- **Vérifions la corrélations entre les variables quantitatives**

```{r, fig.align='center', fig.cap=capFig("Matrice de corrélations"), fig.width = 12, fig.height = 7}
numeric.vars <- as.data.frame(df[sapply(df, is.numeric)])
M <- round(cor(numeric.vars),2) #- Calculer la matrice de corrélation

##-- créer un objet qui contient une palette de couleur pour le gradiant dans le plot
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))

##-- dessiner le graphique
corrplot(M, method="color", col=col(200),  
         type="upper", order="hclust", 
         addCoef.col = "black", #- ajout des coefficients correlation
         tl.col="black", tl.srt=45, tl.cex = 1
         , #- couleur, rotation et police de texte des libellés 
         ##-- ne pas afficher les coefficients de corrélations sur la diagonale (ils valent tous 1)
         diag=FALSE 
         )

```
|     On voit qu'il y' a quand même des variables qui sont <<fortement corrélées>> (pour l'affirmer avec plus d'assurance il serait judicieux de faire un test billatéral de corrélation de **Pearson** avec la commande cor.test(method = "pearson", alternative = "two.sided")).

- **Création du modèle de l'ACP**

```{r}
data.pca <- df[,-1] #- sélectionner toute les variables sauf la variable pays
rownames(data.pca) <- df[,1] #- renommer les lignes avec les noms des pays (individus)
poids <- df$pop
pca.model <- PCA(data.pca, scale.unit = TRUE,
                 quali.sup = c("region", "income_group"),
                 graph = FALSE,
                 row.w = data.pca$pop,
                 quanti.sup = 6)

##- explor(pca.model) pour une interface interactive
```

### Recupération  des valeurs propres et des variances

```{r}
eigen.values <- pca.model$eig
knitr::kable(eigen.values[1:3,2:3], caption = capTab("Inerties expliquées par les 3 premiers axes"))
```
On remarque que les axes 1,2 et 3 représentent respectivement **69,76, 16,49 et 4,09**, donc au total **91,11**

On pourrait aussi visualiser le graphique des valeurs propres : 

```{r, fig.align='center', fig.cap=capFig("Valeurs proppres")}
plt.eig <- fviz_eig(pca.model, title = "Valeurs propres avec Singapore")
```

### Qualité de representation des plans / sur les plans

- **Qualité de representation des plans**

|   Le premier plan a un taux d'inertie supérieur à **86 %**, il capte une grande partie de l'information présente dans les données ce qui signifie qu'il à une bonne qualité de representation alors que le second (1-3) en capte environ **74,63 %** donc a une faible qualité de représenatation comparé au premier. En depit de ce fait, les deux plans ont quand même qualité de représentation si mous fions au critère du taux d'inertie.


- **Qualité de representation sur les plans**

  * ***(1-2)***
  
**LES VARIABLES**
  
```{r, fig.align='center', fig.cap=capFig("Qualités de representation des variables"), fig.width=11, fig.height=6}
graph.cos2.var <- fviz_pca_var(pca.model,col.var="cos2", gradient.cols=c("#F1C40F","#2ECC71","#8E44AD"), repel=TRUE, ggtheme = theme_light())

graph.cos2.var
```

  Concernant les variables, on constate qu'elles toutes sont bien representées avec des cosinus carrés qui ont une valeur minimale environ 0,8 à part les variables **biocapacity, life_expectancy, number_of_countries_required** qui ont un cosinus carrés qui vaut environ 0,7.
  
**LES INDIVIDUS**

```{r}
threshold <- 0.85
data.ind.cos2 <- pca.model$ind$cos2

dim1 <- data.ind.cos2[,"Dim.1"]
dim1 <- dim1[dim1 >= threshold]
countries.dim1 <- names(dim1)
names(dim1) <-  NULL

dim2 <- data.ind.cos2[,"Dim.2"]
dim2 <- dim2[dim2 >= 0.6]
countries.dim2 <- names(dim2)
names(dim2) <-  NULL

##-- crétion des dataframes 
dim1.df <- data.frame(
  Country = countries.dim1,
  `Cos carré` = dim1
) %>% arrange(desc(dim1))


dim2.df <- data.frame(
  Country = countries.dim2,
  `Cos carré` = dim2
) %>% arrange(desc(dim2))


##-- création des tableaux kableExtra
dim1.tbl <- kableExtra::kbl(dim1.df, caption = capTab("Individus ayant un cosinus carré supérieur ou égal à 0,85 sur l'axe 1")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>% add_footnote(label = "Source des données :  https://marieetienne.github.io/datasets/overshootday_overview.csv")

dim2.tbl <- kableExtra::kbl(dim2.df, caption = capTab("Individus ayant un cosinus carré supérieur ou égal à 0,6 sur l'axe 2")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))  %>% add_footnote(label = "Source des données :  https://marieetienne.github.io/datasets/overshootday_overview.csv")
```

:::: {.columns}


::: {.column width="48%"}
```{r}
dim1.tbl
```

:::

::: {.column width="48%"}
```{r}
dim2.tbl 
```

:::


::::

* **AXE 1** : On voit que les pays (individus) comme le Togo, le Yemen, les USA, le Rwanda sont tres bien representés. **RMRQ : Il y en a d'autres**

* **AXE 2** : Il n'y a que 6 pays qui sont bien représentés sur cet axe. Il s'agit de la Namibie, le Paraguay, le Brésil, la Bolivie et Barbados. 

  
***REMARQUE : *** *Pour le plan formé des axes 1 et 3, on peut procéder la même que celle en amont*


### Caractérisation des axes

```{r, fig.align='center', fig.cap=capFig("Cercle de corrélation des variables et leur contribution à la formation des axes"), fig.width=11, fig.height=6}
graph.contrib.var <- fviz_pca_var(pca.model,col.var="contrib", gradient.cols=c("#F1C40F","#2ECC71","#8E44AD"), repel=TRUE, ggtheme = theme_light())

graph.contrib.var
```


### Comment l’ACP est-elle modifiée si on retire Singapour de l’analyse ?

```{r}
data.pca.sans.singapore <- data.pca %>% filter(rownames(data.pca) != "Singapore")
poids <- df$pop
pca.model.sans.singapore <- PCA(data.pca.sans.singapore, scale.unit = TRUE,
                 quali.sup = c("region", "income_group"),
                 graph = FALSE,
                 row.w = data.pca.sans.singapore$pop,
                 quanti.sup = 6)

##-- explor(pca.model)
```

```{r, fig.align='center', fig.cap=capFig("Comparaison des valeurs propres issues de l'ACP aevc et sans Singapore"), fig.width=11, fig.height=6}
plt.eig.sans.sing <- fviz_eig(pca.model.sans.singapore, title = "Valeurs propres sans Singapore") 
comp.eig <-  cowplot::plot_grid(
  plt.eig,
  plt.eig.sans.sing,
  ncol = 2
)
comp.eig
```

|   On voit que rien ne se passe (pas de changement brusque) au niveau de la qualité des axes. Voyons de plus prêt ce qui se passe :

```{r, fig.align='center', fig.cap=capFig("Comparaison des valeurs propres issues de l'ACP aevc et sans Singapore"), fig.width=11, fig.height=6}
plot.indiv.avec.sing <- fviz_pca_ind(pca.model)
plot.indiv.avec.sing
```

|   On voit que **Singapore** est atypique. Cela pourrait signifier que Singapore participe fortement à la formation de l'axe 2 (point plus proche de l'axe 1).

```{r}
data <- as.data.frame(pca.model$ind$contrib)
data <-  data %>% arrange(desc(Dim.2)) %>% head(10)
kableExtra::kbl(data, caption = capTab("Contribution des individus à la formation des axes par contribution décroissante suivant l'axe 2")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))  %>% add_footnote(label = "Source des données :  https://marieetienne.github.io/datasets/overshootday_overview.csv")
```
Et pourtant il contribue fortement à la formation de l'axe 2.



### Deux ACP différentes

```{r}
variables.empreinte <- df[, c("total_prod", "total_cons", "biocapacity", "number_of_earths_required", "overshoot_day", "pop")]
rownames(variables.empreinte) <- df$country
variables.developpement <- df[, c("life_expectancy", "hdi", "per_capita_gdp","pop")]
rownames(variables.developpement) <- df$country
```


#### ACP sur les variables d'empruntes écologiques

```{r}
data.pca <- df[,-1] ## sélectionner toute les variables sauf la variable pays
rownames(data.pca) <- df[,1] ## renommer les lignes avec les noms des pays (individus)
poids <- df$pop
acp_empreinte <- PCA(data.pca, scale.unit = TRUE,
                 quali.sup = c("region", "income_group"),
                 graph = FALSE,
                 row.w = data.pca$pop,
                 quanti.sup = c(6,1,2,3))

##-- valeurs propres
acp_empreinte$eig[1,1]
```
La première valeur propre est : ***4,10***


#### ACP sur les variables d'empruntes écologiques

```{r}
acp.developpement <- PCA(data.pca, scale.unit = TRUE,
                 quali.sup = c("region", "income_group"),
                 graph = FALSE,
                 row.w = data.pca$pop,
                 quanti.sup = 6:12)
##-- valeurs propres
acp.developpement$eig[1,1]
```
La première valeur propre est : ***2,59***

### ACP avec pondérations des variables

```{r}
poids.var <- c(rep(acp_empreinte$eig[1,1], length(variables.empreinte)), rep(acp.developpement$eig[1,1], length(variables.developpement)))
data.pca <- data.pca %>% filter(rownames(data.pca) != "Singapore")
acp.ponderee <- PCA(data.pca, col.w = poids.var, graph = FALSE, row.w = data.pca$pop, scale.unit = TRUE, quanti.sup = "pop",
                 quali.sup = c("region", "income_group"),)

explor(acp.ponderee)
```

## REALISATION DE L'AFM

